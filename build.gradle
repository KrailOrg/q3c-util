buildscript {
    ext.kotlin_version = '1.1.3-2'
    ext.kaytee_plugin_version = "0.16.0.0"

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "uk.q3c.kaytee:kaytee-plugin:$kaytee_plugin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'uk.q3c.kaytee'

group='uk.q3c.util'

kaytee {
    baseVersion = "0.9.0.0"
}

bintray {
    user = 'dsowerby'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

ext.assertjVersion = '3.3.0'
ext.commonsLangVersion = '3.3.2'
ext.guavaVersion = '23.0'
ext.guiceVersion = '4.1.0'
ext.slf4jVersion = '1.7.6'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    //logging
    compile 'org.slf4j:slf4j-api:' + slf4jVersion
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-core:1.1.2'
    compile 'org.apache.commons:commons-lang3:' + commonsLangVersion

    compile "com.google.inject:guice:$guiceVersion"
    compile "com.google.inject.extensions:guice-multibindings:$guiceVersion"
    //the easiest way to all the Jung parts
    compile 'net.sf.jung:jung-samples:2.0.1'
    compile 'com.google.code.findbugs:annotations:3.0.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'com.google.guava:guava:' + guavaVersion
    compile 'org.apache.commons:commons-collections4:4.1'

    testCompile 'org.assertj:assertj-core:' + assertjVersion
    testCompile 'org.assertj:assertj-guava:1.3.1'
    compile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-guice:1.1-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.0'
    testCompile 'org.objenesis:objenesis:2.2'
}
sourceCompatibility = '1.8'
apply plugin: 'kotlin'
